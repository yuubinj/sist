-- member1/member2 테이블에 추가하는 프로시저
CREATE OR REPLACE PROCEDURE insertMember
(
    pId IN member1.id%TYPE,
    pPwd IN member1.pwd%TYPE,
    pName IN member1.name%TYPE,
    pBirth IN member2.birth%TYPE,
    pEmail IN member2.email%TYPE,
    pTel IN member2.tel%TYPE
)
IS
BEGIN
    INSERT INTO member1(id, pwd, name) VALUES(pId,pPwd,pName);
    INSERT INTO member2(id, birth, email, tel) VALUES(pId, pBirth, pEmail, pTel);
    COMMIT;
END;
/

-- member1/member2 테이블에 수정하는 프로시저
CREATE OR REPLACE PROCEDURE updateMember
(
    pId IN member1.id%TYPE,
    pPwd IN member1.pwd%TYPE,
    pBirth IN member2.birth%TYPE,
    pEmail IN member2.email%TYPE,
    pTel IN member2.tel%TYPE
)
IS
BEGIN
    UPDATE member1 SET pwd=pPwd Where id=pid;
    IF SQL%NOTFOUND THEN
        RAISE_APPLICATION_ERROR(-20100,'존재하지 않는 자료입니다');  
    END IF;
    UPDATE member2 SET birth=pBirth, email=pEmail, tel=pTel WHERE id=pId;
    COMMIT;
END;
/

-- member1/member2 테이블의 자료를 삭제하는 프로시저
CREATE OR REPLACE PROCEDURE deleteMember
(
   pId IN VARCHAR2
)
IS
BEGIN
    DELETE FROM member2 WHERE id=pId;
    DELETE FROM member1 WHERE id=pId;
    IF SQL%NOTFOUND THEN
        RAISE_APPLICATION_ERROR(-20100,'존재하지 않는 자료입니다');  
   END IF;
   COMMIT;
END;
/

-- member1/member2 테이블에서 모든 데이터를 가져오는 프로시저
CREATE OR REPLACE PROCEDURE findByAll
(
    pResult OUT SYS_REFCURSOR
)
IS
BEGIN
    OPEN pResult FOR
        SELECT  m1.id, pwd, name, TO_CHAR(birth, 'YYYY-MM-DD') birth, email, tel
        FROM member1 m1
        LEFT OUTER JOIN member2 m2 ON m1.id = m2.id;
END;
/

-- member1/member2 테이블에서 아이디검색 데이터를 가져오는 프로시저
CREATE OR REPLACE PROCEDURE findById
(
    pResult OUT SYS_REFCURSOR,
    pId IN VARCHAR2
)
IS
BEGIN
    OPEN pResult FOR
        SELECT  m1.id, pwd, name, TO_CHAR(birth, 'YYYY-MM-DD')birth, 
           email, tel 
        FROM member1 m1 
        LEFT OUTER JOIN member2 m2 ON m1.id = m2.id
        WHERE m1.id=pId;
END;
/

-- member1/member2 테이블에서 이름 검색하여 가져오는 프로시저
CREATE OR REPLACE PROCEDURE findByName
(
    pResult OUT SYS_REFCURSOR,
    pName IN VARCHAR2
)
IS
BEGIN
    OPEN pResult FOR
        SELECT  m1.id, pwd, name, TO_CHAR(birth, 'YYYY-MM-DD')birth, email, tel 
        FROM member1 m1  
        LEFT OUTER JOIN member2 m2 ON m1.id = m2.id
        WHERE INSTR (name, pName) >= 1;
        -- WHERE name LIKE '%' || pName || '%'; 
END;
/
